#!/bin/bash
rcommand=${0##*/}
rpath=${0%/*}
#*/
[ -z "$M_ROOT" ] && M_ROOT=$(readlink -f "$rpath/..")

possible_options="help verbose debug ip cluster role flavor add uncomment"
necessary_options=""

IFS1=$IFS
IFS='-'
for s_option in "${@}"
do
  found=false
  case ${s_option} in
  --*=*)
    s_optname=`expr "X$s_option" : 'X[^-]*-*\([^=]*\)'`  
    s_optarg=`expr "X$s_option" : 'X[^=]*=\(.*\)'` 
    ;;
  --*)
    s_optname=`expr "X$s_option" : 'X[^-]*-*\([^=]*\)'`    
    s_optarg='yes' 
    ;;
  *)
    [ -z "$ARG" ] && ARG=$s_option && found=true
    ;;
  esac
  for option in `echo $possible_options | sed 's/ /-/g'`; do
    if [ "X$s_optname" == "X$option" ]; then
      if [ -n "$s_optarg" ]; then
        eval "$s_optname=\"$s_optarg\""
      else
        [ -z "$(eval echo \$$option)" ] && eval "$option="
      fi
      found=true
    fi
  done
  if ! $found; then 
    echo "Unknown option: $s_optname"
    exit 1
  fi
done
IFS=$IFS1

if [ "X$help" == "Xyes" ] ; then
  echo -e -n "Usage: ${0##*/}"" <options> <positional parameters>\n\n"
  if [ -n "$possible_options" ] ; then
    echo -e " <options> <positional parameters>\n\n  Possible options: $possible_options"
    [ -n "$necessary_options" ] && echo "  Necessary options: $necessary_options"
  else
    echo -e " <positional parameters>\n\n"
  fi
  exit 0
fi

s_var=`expr "X$ARG" : 'X\([^=]*\)'`
s_value=`expr "X$ARG" : 'X[^=]*=\(.*\)'`

set_var() {
  if [ -n "$uncomment" ] ; then
    sed -i "s|^[[:space:]]*#*[[:space:]]*${s_var}=\(.*\)|${s_var}=&|g" "$conf" && echo "uncommented"
  fi
  if [ -n "$add" ] ; then
    sed -i "s|${s_var}=\(.*\)|${s_var}=&,${s_value}|g" "$conf" && echo "added"
  else
    sed -i "s|${s_var}=.*|${s_var}=${s_value}|g" "$conf" && echo "changed"
  fi
}

if [ `expr "$s_var" : ".*_[0-9]$"` -ne 0 ]; then
  s_value3=`echo "$s_value" | cut -d',' -f3`
  if [ -z "$s_value3" ]; then
    echo -e "Syntax for non-indexed variable is:\n\nVAR=val1,val2,val3\n\n"
    exit 1
  else
    s_value1=`echo "$s_value" | cut -d',' -f1`
    s_value2=`echo "$s_value" | cut -d',' -f2`
    nivar=$s_var
  fi
  for ((i=1; i<=3; i++)) ; do
    s_var=${nivar}_$i
    s_val=${s_value}$i
    for conf in `grep -l "${s_var}=" "$M_ROOT/conf"/*.conf` ; do
      echo -n "Found in $conf ...   "
      set_var
    done
    for conf in `grep -l "${s_var}=" "$M_ROOT/tests"/*.conf` ; do
      echo -n "Found in $conf ...   "
      set_var
    done
  done
else
  for conf in `grep -l "${s_var}=" "$M_ROOT/conf"/*.conf` ; do
    echo -n "Found in $conf ...   "
    set_var
  done
  for conf in `grep -l "${s_var}=" "$M_ROOT/tests"/*.conf` ; do
    echo -n "Found in $conf ...   "
    set_var
  done
fi




