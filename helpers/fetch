#!/usr/bin/env bash
# Copyright (C) 2008-2011 Igor Simonov (me@igorsimonov.com)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

#rcommand=${0##*/}
#rpath=${0%/*}
#*/ (this is needed to fix vi syntax highlighting)

CURL=`which curl 2>/dev/null`
LYNX=`which lynx 2>/dev/null`
LINKS=`which links 2>/dev/null`
WGET=`which wget 2>/dev/null`

# TODO
insecure=true

if [[ "${1}" =~ '://' ]] ; then
  PROTO=`echo "${1}" | awk -F'://' '{print $1}'`
  URL=`echo "${1}" | awk -F'://' '{print $2}'`
else
  URL=$1
fi
filename=${URL##*/}
echo "Protocol: $PROTO"
echo "URL: $URL"

[ -z "$PROTO" ] && PROTO="http"

if [ -n "$WGET" ] ; then
  $insecure && WGET="$WGET --no-check-certificate"
  [ -n "$2" ] && DEST="-P ${2}"
  if [ -n "$verbose" ]; then
    echo "Fetching with Wget"
    $WGET -nH -N $DEST "${PROTO}://$URL"
    res=$?
  else
    $WGET -q -nH -N $DEST "${PROTO}://$URL"
    res=$?
  fi
  if [ $res -eq 0 ] ; then
    exit 0
  else
    if [ $res -eq 0 ]; then
      exit 0
    else
      [ -n "$verbose" ] && echo "failed with exit code $res"
      exit 1
    fi
  fi
fi

if [ -n "$CURL" ] ; then
  [ -n "$2" ] && DEST="-o ${2}/$filename" || DEST="-o $filename"
  if [ -n "$verbose" ]; then
    echo "Fetching with Curl"
    $CURL -m 20 -f "${PROTO}://${URL}" $DEST
    res=$?
  else
    $CURL -m 20 -s -f "${PROTO}://${URL}" $DEST
    res=$?
  fi
  if [ $res -eq 35 ]; then
    $insecure && $CURL -m 20 -s -f "${PROTO}://${URL}" $DEST
    res=$?
  fi
  if [ $res -eq 0 ]; then
    exit 0
  else
    [ -n "$verbose" ] && echo "failed with exit code $res"
    exit 1
  fi
fi

if [ -n "$LINKS" ] ; then
  [ -n "$2" ] && DEST="${2}/$filename" || DEST="$filename"
  [ -n "$verbose" ] && echo "Fetching with Links"
  $LINKS -source 1 "${PROTO}://${URL}" > $DEST
  res=$?
fi
if [ $res -eq 0 ]; then
  exit 0
else
  [ -n "$verbose" ] && echo "failed with exit code $res"
  exit 1
fi

exit 1

