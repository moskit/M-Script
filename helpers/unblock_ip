#!/bin/bash

# Copyright (C) 2008-2011 Igor Simonov (me@igorsimonov.com)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

rcommand=${0##*/}
rpath=${0%/*}
#*/
[ -z "$M_ROOT" ] && M_ROOT=$(readlink -f "$rpath/../")

source "$M_ROOT/lib/functions.sh"
LOG="$M_ROOT/logs/block_ip.log"

[ -f "/sbin/iptables" ] && IPT=/sbin/iptables || IPT=`which iptables 2>/dev/null`
[ -z "$IPT" ] && echo "No iptables found" && exit 1

[ -f "/sbin/iptables-save" ] && IPTS=/sbin/iptables-save || IPTS=`which iptables-save 2>/dev/null`
[ -z "$IPTS" ] && echo "No iptables-save found" && exit 1

usage() {
  cat << "EOF"
Usage: unblock_ip TARGET

where TARGET may be one of:

  tmp               removes all IPs from temporary chain (M_IPBLOCK_TMP)
                    
  const             removes all IPs from constant chain (M_IPBLOCK_CONST)
                    
  <IP address>      removes this IP from both temporary and constant chains

EOF

  exit 0
}

remove_ip_from() {
  for rule in `$IPTS | grep -E "^-A ${2}.*${1} |^-A ${2}.*${1}/" | sed 's|-A|-D|'`; do
    $IPT $rule && log "IP $1 removed from chain $2"
  done
  [ "_$2" == "_M_IPBLOCK_TMP" ] && sed -i "/^${1}$/d" "$M_TEMP/ip_block.tmp" || sed -i "/^${1}$/d" "$M_TEMP/ip_block.const"
}

[ -z "$1" ] && usage

case $1 in
  tmp|temporary|temp)
    $IPT -F M_IPBLOCK_TMP 2>/dev/null
    ;;
  const|constant)
    $IPT -F M_IPBLOCK_CONST 2>/dev/null
    ;;
  *)
    expr "$1" : ".*[^[0-9.:/]]*" >/dev/null && usage
    remove_ip_from $1 M_IPBLOCK_TMP
    remove_ip_from $1 M_IPBLOCK_CONST
    ;;
esac

exit 0

