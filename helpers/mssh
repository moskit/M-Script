#!/bin/bash

# Copyright (C) 2008-2011 Igor Simonov (me@igorsimonov.com)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


rcommand=${BASH_SOURCE##*/}
rpath=${BASH_SOURCE%/*}
[ -z "$M_ROOT" ] && M_ROOT=$(readlink -f "$rpath/../") && export M_ROOT
#*/

SSH=`which ssh 2>/dev/null`
[ -z "$SSH" ] && echo "command ssh not found" && exit 1
source "$M_ROOT/conf/clouds/${CLOUD}.conf"

if [ -n "$SSHPORT" ]; then
  [ $SSHPORT != "22" ] && SSHPORT="-p $SSHPORT" || unset SSHPORT
fi
[ -n "$CONNECT_TIMEOUT" ] && TIMEOUT="-o ConnectTimeout=$CONNECT_TIMEOUT"
nextkey=false

host="$1"
shift

if [ "x$nosudo" == "xyes" ]; then
  command="\(test -e "$M_ROOT_REMOTE/m.rc" \&\& source "$M_ROOT_REMOTE/m.rc" \; export ip=$IP \; $@\)"
else
  command="\(test -e "$M_ROOT_REMOTE/m.rc" \&\& source "$M_ROOT_REMOTE/m.rc" \; export ip=$IP \; sudo $@\)"
fi

# if target is IP
KEY=`grep ^${host}\| "$M_ROOT/servers.list" | cut -d'|' -f2`
# if target is hostname
[ -z "$KEY" ] && KEY=`cat "$M_ROOT/servers.list" | cut -d'|' -f2,4 | grep \|${host}$ | cut -d'|' -f1`

cluster=`grep ^${host}\| "$M_ROOT/servers.list" | cut -d'|' -f5`
[ -z "$cluster" ] && cluster=`grep \|${host}\| "$M_ROOT/servers.list" | cut -d'|' -f5`
[ -z "$SSH_REMOTE_USER" ] && SSH_REMOTE_USER=`grep "^${cluster}|" "$M_ROOT/conf/clusters.conf" | cut -s -d'|' -f13`
[ -z "$SSH_REMOTE_USER" ] && SSH_REMOTE_USER="root"
    
if [ -n "$KEY" ]; then
  if [ ! -f "$M_ROOT/keys/$KEY" ]; then
    KEY1="${KEY}.pem"
    if [ -f "$M_ROOT/keys/$KEY1" ]; then
      KEY=$KEY1
    else
      KEY1="${KEY%.pem}"
    fi
    [ -f "$M_ROOT/keys/$KEY1" ] && KEY=$KEY1
  fi
else
  echo "Server $host not found in servers.list" >&2
fi

if [ ! -f "$M_ROOT/keys/$KEY" ]; then
  if [ -n "$cluster" ] ; then
    KEY=`grep "^${cluster}|" "$M_ROOT/conf/clusters.conf" | cut -d'|' -f2`
    if [ ! -f "$M_ROOT/keys/$KEY" ]; then
      KEY1="${KEY}.pem"
      [ -f "$M_ROOT/keys/$KEY1" ] || KEY1="${KEY%.pem}"
      [ -f "$M_ROOT/keys/$KEY1" ] && KEY=$KEY1
    fi
  else
    echo "Cluster not found" >&2
  fi
  if [ ! -f "$M_ROOT/keys/$KEY" ]; then
    USERKEY1="~/.ssh/id_rsa"
    USERKEY2="~/.ssh/id_dsa"
  fi
fi

KEY="$M_ROOT/keys/$KEY"

if [ -n "$KEY" ] ; then
  if [ -f "$KEY" ]; then
    $SSH $TIMEOUT -i "$KEY" $SSHPORT "$SSH_REMOTE_USER@$host" $command
    [ $? -eq 255 ] && nextkey=true || exit 0
  else
    nextkey=true
  fi
else
  nextkey=true
fi
if $nextkey ; then
  nextkey=false
  if [ -f "$USERKEY1" ]; then
    $SSH $TIMEOUT -i "$USERKEY1" $SSHPORT "$SSH_REMOTE_USER@$host" $command
    [ $? -eq 255 ] && nextkey=true || exit 0
  else
    nextkey=true
  fi
fi
if $nextkey ; then
  nextkey=false
  if [ -f "$USERKEY2" ]; then
    $SSH $TIMEOUT -i "$USERKEY2" $SSHPORT "$REMOTE_USER@$host" $command
    [ $? -eq 255 ] && nextkey=true || exit 0
  else
    nextkey=true
  fi
fi

if $nextkey ; then
  echo "`date +"%m.%d %H:%M:%S"` ${0##*/}: no matching key found for ${@%% *}, tried: ${KEY}`[ -n "$USERKEY1" ] && echo ", $USERKEY1"``[ -n "$USERKEY2" ] && echo ", $USERKEY2"`" >> "$M_ROOT/logs/cloud.log"
fi

exit 0

