#!/bin/bash

# Copyright (C) 2008-2011 Igor Simonov (me@igorsimonov.com)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


rcommand=${BASH_SOURCE##*/}
rpath=${BASH_SOURCE%/*}
[ -z "$M_ROOT" ] && M_ROOT=$(readlink -f "$rpath/../") && export M_ROOT
#*/

SSH=`which ssh 2>/dev/null`
[ -z "$SSH" ] && echo "command ssh not found" && exit 1
nextkey=false

# if target is IP
KEY=`grep ^${1}\| "$M_ROOT/servers.list" | cut -d'|' -f2`
# if target is hostname
[ -z "$KEY" ] && KEY=`cat "$M_ROOT/servers.list" | cut -d'|' -f2,4 | grep \|${1}$ | cut -d'|' -f1`

if [ ! -f "$M_ROOT/keys/$KEY" ]; then
  KEY1="${KEY}.pem"
  if [ -f "$M_ROOT/keys/$KEY1" ]; then
    KEY=$KEY1
  else
    KEY1="${KEY%.pem}"
  fi
  [ -f "$M_ROOT/keys/$KEY1" ] && KEY=$KEY1
fi

if [ ! -f "$M_ROOT/keys/$KEY" ]; then
  cluster=`grep ^${1}\| "$M_ROOT/servers.list" | cut -d'|' -f5`
  KEY=`grep "^${cluster}|" "${rpath}/../conf/clusters.conf" | cut -d'|' -f2`
  if [ ! -f "$M_ROOT/keys/$KEY" ]; then
    KEY1="${KEY}.pem"
    [ -f "$M_ROOT/keys/$KEY1" ] || KEY1="${KEY%.pem}"
    [ -f "$M_ROOT/keys/$KEY1" ] && KEY=$KEY1
  fi
  if [ ! -f "$M_ROOT/keys/$KEY" ]; then
    USERKEY1="~/.ssh/id_rsa"
    USERKEY2="~/.ssh/id_dsa"
  fi
fi

KEY="$M_ROOT/keys/$KEY"

if [ -n "$KEY" ] ; then
  if [ -f "$KEY" ]; then
    $SSH -i "$KEY" "$@"
    [ $? -eq 255 ] && nextkey=true || exit 0
  fi
else
  nextkey=true
fi
if $nextkey ; then
  if [ -f "$USERKEY1" ]; then
    $SSH -i "$USERKEY1" "$@"
    [ $? -eq 255 ] && nextkey=true || exit 0
  fi
fi
if $nextkey ; then
  if [ -f "$USERKEY2" ]; then
    $SSH -i "$USERKEY2" "$@"
    [ $? -eq 255 ] && nextkey=true || exit 0
  fi
fi

echo "No matching key found, tried: $KEY, $USERKEY1, $USERKEY2"

