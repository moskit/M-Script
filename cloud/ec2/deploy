#!/usr/bin/env bash
# Copyright (C) 2008-2011 Igor Simonov (me@igorsimonov.com)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


rcommand=${0##*/}
rpath=${0%/*}
#*/ (this is needed to fix vi syntax highlighting)
SSH=`which ssh 2>/dev/null`
[ -z "$SSH" ] && echo "Ssh utility not found, exiting" && exit 1
[ -f "/sbin/ifconfig" ] && IFCFG=/sbin/ifconfig || IFCFG=`which ifconfig 2>/dev/null`
possible_options="cluster help region verbose check repository"

for s_option in "${@}"
do
  found=0
  case ${s_option} in
  --*=*)
    s_optname=`expr "X$s_option" : 'X[^-]*-*\([^=]*\)'`  
    s_optarg=`expr "X$s_option" : 'X[^=]*=\(.*\)'` 
    ;;
  --*)
    s_optname=`expr "X$s_option" : 'X[^-]*-*\([^=]*\)'`    
    s_optarg='yes' 
    ;;
  *=*)
    echo "Wrong syntax: options must start with a double dash"
    exit 1
    ;;
  *)
    s_param=${s_option}
    s_optname=''
    s_optarg=''
    ;;
  esac
  for option in `echo $possible_options | sed 's/,//g'`; do 
    [ "X$s_optname" == "X$option" ] && eval "$option=${s_optarg}" && found=1
  done
  [ "X$s_option" == "X$s_param" ] && found=1
  if [[ found -ne 1 ]]; then 
    echo "Unknown option: $s_optname"
    exit 1
  fi
done

IFS1=$IFS
IFS='
'
### Repository|System|URL|User|Password|Cluster|Path
if [ "X$check" == "Xyes" ] ; then
  [ -n "$cluster" ] && cluster="--cluster=$cluster"
  [ -n "$repository" ] && repository="--repository=$repository"
  [ "X$verbose" == "Xyes" ] && verbose="--verbose"
  for rname in `${rpath}/../../helpers/svncheck.sh "$cluster" "$repository" | grep -v 0$ | cut -d' ' -f1` ; do
    repo=`cat ${rpath}/../../conf/deployment.conf|grep "^${rname}|"|tail -1`
    repourl=`echo "${repo}" | cut -d'|' -f3`
    repouser=`echo "${repo}" | cut -d'|' -f4`
    [ "X$repouser" == "X" ] || repouser="--username=$repouser"
    repopass=`echo "${repo}" | cut -d'|' -f5`
    [ "X$repopass" == "X" ] || repopass="--password=$repopass"
    repopath=`echo "${repo}" | cut -d'|' -f7`
    ${rpath}/../cloudexec "$cluster" "$verbose" "svn export $repouser $repopass --non-interactive $repourl $repopath"
  done
else
  for repo in `cat ${rpath}/../../conf/deployment.conf|grep -v ^$|grep -v ^#|grep -v ^[[:space:]]*#` ; do
    if [ -n "$repository" ] ; then
      if [ "$repository" != "$reponame" ] ; then
        continue
      fi
    fi
    repocluster=`echo "${repo}" | cut -d'|' -f6`
    if [ -n "$cluster" ] ; then
      if [ "$cluster" != "$repocluster" ] ; then
        continue
      fi
    fi
    # only svn is supported so far
    repourl=`echo "${repo}" | cut -d'|' -f3`
    repouser=`echo "${repo}" | cut -d'|' -f4`
    [ "X$repouser" == "X" ] || repouser="--username=$repouser"
    repopass=`echo "${repo}" | cut -d'|' -f5`
    [ "X$repopass" == "X" ] || repopass="--password=$repopass"
    repopath=`echo "${repo}" | cut -d'|' -f7`
    [ -n "$cluster" ] && cluster="--cluster=$cluster"
    [ "X$verbose" == "Xyes" ] && verbose="--verbose"
    ${rpath}/../cloudexec "$cluster" "$verbose" "svn export $repouser $repopass --non-interactive $repourl $repopath"
  done
fi

IFS=$IFS1
