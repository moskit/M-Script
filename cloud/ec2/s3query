#!/usr/bin/env bash
# Copyright (C) 2008-2011 Igor Simonov (me@igorsimonov.com)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

rcommand=${0##*/}
rpath=${0%/*}
#*/ (this is needed to fix vi syntax highlighting)

CURL=`which curl 2>/dev/null`
SSLEX=`which openssl 2>/dev/null`
source "$rpath/../../conf/clouds/${CLOUD}.conf"
source "$rpath/../../conf/mon.conf"
M_TEMP="$M_TEMP/cloud/$CLOUD"
install -d "$M_TEMP"
CURL="$CURL -s"

possible_options="region action"
necessary_options=""

IFS1=$IFS
IFS='--'
for s_option in "$@"
do
  found=0
  case ${s_option} in
  --*=*)
    s_optname=`expr "X$s_option" : 'X[^-]*-*\([^=]*\)'`  
    s_optarg=`expr "X$s_option" : 'X[^=]*=\(.*\)'` 
    ;;
  --*)
    s_optname=`expr "X$s_option" : 'X[^-]*-*\([^=]*\)'`    
    s_optarg='yes' 
    ;;
  *=*)
    echo "Wrong syntax: options must start with a double dash"
    exit 1
    ;;
  *)
    s_param=${s_option}
    s_optname=''
    s_optarg=''
    ;;
  esac
  for option in `echo $possible_options | sed 's/ /--/g'`; do 
    [ -n "$s_optname" ] && [ "_$s_optname" == "_$option" ] && eval "$option=\"${s_optarg}\"" && found=1
  done
  [ "_$s_option" == "_$s_param" ] && found=1
  if [[ $found -ne 1 ]]; then 
    echo "Unknown option: $s_optname"
    exit 1
  fi
done
IFS=$IFS1

request=$M_TEMP/s3query.$$

canonicalize() {

}

#server_date=`curl -q -s -S -I --max-time 5 --url https://route53.amazonaws.com/date | grep ^Date | awk -F'Date: ' '{print $2}' | sed 's|\r||'`
hdate=`date -u -R`

signature=`printf "$server_date" | $SSLEX dgst -binary -sha1 -hmac $AWS_SECRET_ACCESS_KEY | base64`
