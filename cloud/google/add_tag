#!/bin/bash
# Copyright (C) 2008-2016 Igor Simonov (me@igorsimonov.com)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

rcommand=${0##*/}
rpath=${0%/*}
#*/

V="1"

request() {
  tags="`echo "$nodeObject" | grep '"tags"/"items"' | cut -sd'|' -f2 | tr '\n' ','`\"${tagstring}\""
  body="{[ \"items\": $tags ], \"fingerprint\": $tagsFingerprint }"
  [ -n "$log_request" ] && log "$CURL \"https://www.googleapis.com/compute/v$V/projects/$PROJECT_ID/zones/$region/instances/$name/setTags\" -d \"$body\" -H \"Content-Type: application/json\" -H \"Authorization:$token\""
  resp=`$CURL "https://www.googleapis.com/compute/v$V/projects/$PROJECT_ID/zones/$region/instances/$name/setTags" -d "$body" -H "Content-Type: application/json" -H "Authorization:$token" | "$M_ROOT"/lib/json2txt`
  echo "$resp" > "$M_TEMP/${rcommand}.resp"
}

possible_options="id name region log_request cloud tag"
necessary_options="tag"

ARGV=`echo $@ | sed 's/^--//;s/ --/|/g;s/ /|/g'`
[ -z "$ARGV" ] && ${0} --help
IFS1=$IFS
IFS='|'
for s_option in $ARGV
do
  s_optname=${s_option%%=*}
  s_optarg=${s_option##*=}
  [ "_$s_optarg" == "_$s_optname" ] && s_optarg="yes"
  found=false
  for option in `echo $possible_options | sed 's/ /|/g'`; do 
    [ "_$s_optname" == "_$option" ] && eval "$s_optname=\"$s_optarg\"" && found=true
  done
  if ! $found ; then 
    echo "Unknown option: $s_optname"
    exit 1
  fi
done
IFS=$IFS1

found=0
for option in `echo $necessary_options | sed 's/,//g'`; do
  [ -z "$(eval echo \$$option)" ] && missing_options="${missing_options}, --${option}" && found=1
done
if [[ found -eq 1 ]]; then
  missing_options=${missing_options#*,}
  echo "Necessary options: $missing_options not found"
  exit 1
fi

[ -n "$cloud" ] && CLOUD=$cloud
[ -z "$CLOUD" ] && echo "No cloud defined" && exit 1

source "$M_ROOT/conf/mon.conf"
source "$M_ROOT/conf/clouds/${CLOUD}.conf"
source "$M_ROOT/lib/cloud_functions.sh"
LOG="$M_ROOT/logs/cloud.log"

source "$rpath/functions.sh" || exit 1

[ -z "$name" ] && [ -n "$id" ] && name=$id

if [ `expr "$tag" : ".*:"` -gt 0 ]; then
  tagstring="${tag%:*}---${tag#*:}"
else
  tagstring=$tag
fi

nodeObject=`IAMACHILD=1 "$rpath"/get_node_details --cloud=$CLOUD --name=$name`
tagsFingerprint=`echo "$nodeObject" | grep tagsFingerprint | cut -sd'|' -f2`
if [ -z "$region" ]; then
  region=`echo "$nodeObject" | grep region | cut -sd'|' -f2`
  region=${region##*/}
fi

token=`get_oath2_token`
request && log "Request sent" || proper_exit 1 91
[ `echo "$resp" | wc -l` -eq 0 ] && log "empty response or response is not JSON" && proper_exit 1 92
[ `echo "$resp" | grep -c '"error"'` -ne 0 ] && log "request failed with error(s) `echo "$resp" | grep '"message"|' | cut -d'|' -f2`" && proper_exit 1 93

proper_exit 0 95

