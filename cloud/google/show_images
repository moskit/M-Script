#!/bin/bash
# Copyright (C) 2008-2016 Igor Simonov (me@igorsimonov.com)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

rcommand=${0##*/}
rpath=${0%/*}
#*/

CURL=`which curl 2>/dev/null`
CURL="$CURL -s -k"
V="1"

possible_options="cloud project view verbose debug dry all showdeprecated"
necessary_options=""

list_images() {
  data=`cat "$M_TEMP/${rcommand}.resp"`
  for sn in `echo "$data" | cut -sd'/' -f3 | sort | uniq`; do
    image=`echo "$data" | grep "\"items\"/$sn/"`
    ideprecation=`echo "$image" | grep '"deprecated"/"state"|' | cut -sd'|' -f2 | tr -d '"'`
    [ -z "$all" ] && [ "_$ideprecation" == "_DEPRECATED" ] && continue
    case $view in
      long)
        iname=`echo "$image" | grep '"name"|' | cut -sd'|' -f2 | tr -d '"'`
        icreated=`echo "$image" | grep '"creationTimestamp"|' | cut -sd'|' -f2 | tr -d '"'`
        idescription=`echo "$image" | grep '"description"|' | cut -sd'|' -f2 | tr -d '"'`
        istatus=`echo "$image" | grep '"status"|' | cut -sd'|' -f2 | tr -d '"'`
        idisksize=`echo "$image" | grep '"diskSizeGb"|' | cut -sd'|' -f2 | tr -d '"'`
        echo -e "Name: $iname   Created at: $icreated\nDescription: $idescription\nDisk size: $idisksize   Status: $istatus   $ideprecation\n--------------------------------------------------------------"
        ;;
      *)
        echo "$image" | grep '"name"|' | cut -sd'|' -f2 | tr -d '"'
        ;;
    esac
  done
}

ARGV=`echo $@ | sed 's/^--//;s/ --/|/g;s/ /|/g'`
[ -z "$ARGV" ] && ${0} --help
IFS1=$IFS
IFS='|'
for s_option in $ARGV
do
  s_optname=${s_option%%=*}
  s_optarg=${s_option##*=}
  [ "_$s_optarg" == "_$s_optname" ] && s_optarg="yes"
  found=false
  for option in `echo $possible_options | sed 's/ /|/g'`; do 
    [ "_$s_optname" == "_$option" ] && eval "$s_optname=\"$s_optarg\"" && found=true
  done
  if ! $found ; then 
    echo "Unknown option: $s_optname"
    exit 1
  fi
done
IFS=$IFS1

[ -n "$cloud" ] && CLOUD=$cloud
[ -z "$CLOUD" ] && echo "No cloud defined" && exit 1

source "$rpath/functions.sh"
source "$M_ROOT/conf/clouds/${CLOUD}.conf"

[ -z "$project" ] && project=$PROJECT_ID
[ -n "$showdeprecated" ] && all=yes

token=`get_oath2_token`
$CURL https://www.googleapis.com/compute/v1/projects/$project/global/images -H "Authorization:$token" | "$M_ROOT"/lib/json2txt > "$M_TEMP/${rcommand}.resp"
list_images

