#!/bin/bash

rcommand=${0##*/}
rpath=${0%/*}
#*/
[ -z "$M_ROOT" ] && M_ROOT=$(readlink -f "$rpath/../../")

possible_options="cloud"
necessary_options=""

IFSORIG=$IFS
IFS='-'
for s_option in "$@"
do
  s_option=${s_option/--/}
  s_optname=${s_option%%=*}
  s_optarg=${s_option##*=}
  [ "_$s_optarg" == "_$s_optname" ] && unset s_optarg

  for option in ${possible_options// /-} ; do
    [ "_$s_optname" == "_$option" ] && eval "$s_optname=\"$s_optarg\"" && break
  done

done
IFS=$IFSORIG

if [ -n "$cloud" ]; then
  cloud=`echo -e "$cloud" | tr ',' '\n'`
elif [ -n "$CLOUD" ]; then
  cloud=$CLOUD
fi
if [ -z "$cloud" ] || [ "_$cloud" == "_all" ]; then
  cloud=`cat "$M_ROOT/conf/clusters.conf" | grep -vE "^$|^#|^[[:space:]]*#" | cut -d'|' -f12 | sort | uniq | grep -v ^$`
fi

for cld in $cloud ; do
  [ -n "$PS1" ] && echo "*** Cloud $cld"
  if [ -e "$M_ROOT/conf/clouds/${cld}.conf" ]; then
    source "$M_ROOT/conf/clouds/${cld}.conf"
    export CLOUD=$cld
  else
    echo "No configuration found for cloud $cld"
    continue
  fi
  if [ -n "$CLOUD_PROVIDER" ]; then
    "$M_ROOT"/cloud/$CLOUD_PROVIDER/show_nodes --cloud=$cld $@
  else
    "$M_ROOT"/cloud/common/show_noncloud_nodes --cloud=$cld $@
  fi
done

