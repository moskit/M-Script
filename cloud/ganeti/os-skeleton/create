#!/bin/bash

# Copyright (C) 2010 Oregon State University
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

set -e

. common.sh

debug set -x

# If the target device is not a real block device we'll first losetup it.
# This is needed for file disks.
if [ ! -b $blockdev ]; then
  ORIGINAL_BLOCKDEV=$blockdev
  blockdev=$($LOSETUP -f --show $blockdev)
  CLEANUP+=("$LOSETUP -d $blockdev")
fi

if [ ! -f "$IMAGE_FILE" ] ; then
  log_error "Can't find image file: $IMAGE_FILE"
  exit 1
fi

format_disk0 $blockdev

# deploying something like a windows image, skip the rest
if [ "${NOMOUNT}" = "yes" ] ; then
  cleanup
  exit 0
fi

filesystem_dev=$(map_disk0 $blockdev)
CLEANUP+=("unmap_disk0 $blockdev")

mke2fs -Fjq $filesystem_dev
root_uuid=$($VOL_ID $filesystem_dev )

TARGET=`mktemp -d` || exit 1
CLEANUP+=("rmdir $TARGET")

# mount filesystems
mount $filesystem_dev $TARGET
CLEANUP+=("umount $TARGET")

root_dump="${IMAGE_FILE}"
( cd ${TARGET}; restore -r -y -f ${root_dump} > /dev/null )

mv $TARGET/etc/fstab $TARGET/etc/fstab.orig || true
cat > $TARGET/etc/fstab <<EOF
# /etc/fstab: static file system information.
#
# <file system>   <mount point>   <type>  <options>       <dump>  <pass>
UUID=$root_uuid   /               ext3    defaults        0       1
proc              /proc           proc    defaults        0       0
EOF

if [ "${INSTANCE_HV_serial_console}" = "True" ] ; then
  setup_console $TARGET
fi

RUN_PARTS=`which run-parts`

if [ -n "$RUN_PARTS" -a -n "$CUSTOMIZE_DIR" -a -d "$CUSTOMIZE_DIR" ]; then
  TARGET=$TARGET
  BLOCKDEV=$blockdev
  ROOT_DEV=$root_dev
  FSYSDEV=$filesystem_dev
  export TARGET SUITE BLOCKDEV ROOT_DEV
  $RUN_PARTS $CUSTOMIZE_DIR
fi

# execute cleanups
cleanup
trap - EXIT

exit 0
