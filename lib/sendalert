#!/bin/bash

# Unlike similar function in mon.run, this one sends full message, ignoring the
# minimal level value from mail.alert.list. Useful for sending seldom-running
# monitors, e.g. ones running as cronjobs

rcommand=${0##*/}
rpath=${0%/*}
[ -z "$M_ROOT" ] && M_ROOT=$(readlink -f "$rpath/../")
#*/

sendalert() {
  IFS1=$IFS; IFS='
'
  if [ -n "$al1" ]; then
    al='*'
  fi
  if [ -n "$al2" ]; then
    al='**'
  fi
  if [ -n "$al3" ]; then
    al='***'
  fi
  if [ -n "$al" ] ; then
    for MLINE in `cat "$M_ROOT/conf/mail.alert.list" | grep -vE "^$|^#|^[[:space:]]*#"`; do
      aladdress=`echo "$MLINE" | cut -d' ' -f1`
      aldriver=`echo "$MLINE" | cut -sd' ' -f3`
      [ -z "$aldriver" ] && aldriver="mail"
      echo -e "=== Sending alert ===\nSubject: $al Server `$HOSTNAME -f 2>/dev/null || $HOSTNAME` alert\nTo: $aladdress\nVia: $aldriver\n\n$etitle\n$message\n=====================" >> "$M_ROOT/monitoring.log"
      if [ "$aldriver" == "mail" ]; then
        echo -e "$message" | $MAILX -s "$al Server `$HOSTNAME -f 2>/dev/null || $HOSTNAME` alert" "$aladdress" >> "$M_ROOT/monitoring.log" 2>&1
      else
        message=`echo -e "$message"`
        echo "$message" | "$M_ROOT"/lib/alert.drivers/$aldriver - $aladdress "$al Server `$HOSTNAME -f 2>/dev/null || $HOSTNAME` alert" >> "$M_ROOT/monitoring.log" 2>&1
      fi
      unset aldriver aladdress
    done
  fi
}

message=`cat $1`
al1=`echo "$message" | grep '<\*>'`
al2=`echo "$message" | grep '<\*\*>'`
al3=`echo "$message" | grep '<\*\*\*>'`

sendalert

exit 0

