#!/bin/bash

# Copyright (C) 2008-2011 Igor Simonov (me@igorsimonov.com)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

declare -i i
i=0
declare -i num
num=0
declare -a index

parseline() {
  line=$1
  if [ "X$line" == "X{" ] ; then
    if [ $i -eq 0 ] ; then
      num+=1
    fi
    i+=1
    return
  fi
  if [ "X$line" == "X}" ] ; then
    [ -z "$noprint" ] && printvar "$var" && unset var
    i+=-1
    return
  fi
  if [ "X$line" == "X," ] ; then
    [ -z "$noprint" ] && printvar "$var" && unset var
    return
  fi
  if [ -n "$line" ] ; then
    #printf "== $line == "
    f4=`echo $line | awk -F'"' '{print $4}'`
    f3=`echo $line | awk -F'"' '{print $3}'`
    f2=`echo $line | awk -F'"' '{print $2}'`
    f1=`echo $line | awk -F'"' '{print $1}'`
    # "string" : "string"
    if [ -n "$f4" ] ; then
      #echo '"string" : "string"'
      if [ -n "$f2" ] ; then
        index[$i]="$f2"
        if [[ $f3 =~ ^[[:space:]]*\:[[:space:]]*$ ]] ; then
          var="$f4"
        else
          var="`echo "$f3" | cut -d':' -f2`\"${f4}\"`echo "$line" | cut -d'"' -f5`"
        fi
      fi
    else
      # either of:
      # notstring : notstring
      if [ -z "$f2" ] ; then
        #echo "notstring : notstring"
        index[$i]="`echo "$line" | cut -d':' -f1 | sed 's|^[[:space:]]*||;s|[[:space:]]*$||;s|^"||;s|"$||'`"
        var="`echo "$line" | cut -d':' -f2 | sed 's|^[[:space:]]*||;s|[[:space:]]*$||;s|^"||;s|"$||'`"
      else
      # notstring : "string"
        if [ -n "$f1" ] ; then
          #echo 'notstring : "string"'
          index[$i]="`echo "$f1" | cut -d':' -f1 | sed 's|^[[:space:]]*||;s|[[:space:]]*$||;s|^"||;s|"$||'`"
          if [ "X`echo $f1 | cut -d':' -f2 | sed 's|^[[:space:]]*||;s|[[:space:]]*$||;s|^"||;s|"$||'`" == "X" ] ; then
            var="$f2"
          else
            var="`echo "$f1" | cut -d':' -f2`\"${f2}\"${f3}"
          fi
        # "string" : notstring
        else
          #echo '"string" : notstring'
          index[$i]=$f2
          var="`echo $f3 | cut -d':' -f2 | sed 's|^[[:space:]]*||;s|[[:space:]]*$||;s|^"||;s|"$||'`"
        fi      
      fi
    
    fi

#    unset noprint
  fi

}

printvar() {
  [ -z "$1" ] && return
  for ((n=1; n<=$i; n++)) ; do
    varname="${varname}/${index[$n]}"
  done
  varname=${varname%/}
  echo "${num}$varname $1"
  unset varname
}

#( IFS='' ; for LINE in `cat $1` ; do echo "${LINE}" ; done ) | while read L ; do a=`printf "$L"|sed 's|{|\n{\n|g;s|}|\n}\n|g;s|,|\n|g'` ; echo "$a" | while read b ; do parseline $b ; echo ">>> $i $z" ; z=$i ; done ; done
cat $1|sed 's|{|\n{\n|g;s|},|\n}\n|g;s|}|\n}\n|g;s|",|"\n,\n|g;s|,"|\n,\n"|g;s|,$|\n,|g' | while read b ; do [ -n "$b" ] && parseline "${b}" ; done
unset branch index ndcont cont i LINE node

