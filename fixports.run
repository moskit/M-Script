#!/bin/bash
# Copyright (C) 2008-2009 Igor Simonov (me@igorsimonov.com)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

rcommand=${0##*/}
rpath=${0%/*}
#*/
source "$rpath/conf/mon.conf"
install -d "$M_TEMP"
echo "`date +"%H:%M:%S"` == Running $0 $* ==" >> "$rpath/monitoring.log"
lockfile=`find "$rpath" -maxdepth 1 -name mon.run.lock -mmin +60`
if [ -n "$lockfile" ] ; then
  ls -l $lockfile >> "$rpath/monitoring.log"
  echo "`date +"%H:%M:%S"` *** Fixports.run: Lock file is older than 60 minutes, removing" >> "$rpath/monitoring.log"
  rm -f $lockfile
fi
for ((i=1; i<=10; i++))
do
  if [ -f "$rpath/mon.run.lock" ] ; then
    echo "`date +"%H:%M:%S"` Fixports.run: waiting for lock" >> "$rpath/monitoring.log"
    sleep 60
    continue
  else
    echo "`date +"%H:%M:%S"` Fixports.run: lock obtained" >> "$rpath/monitoring.log"
    break
  fi
done
if [ -f "$rpath/mon.run.lock" ] ; then
  echo "Giving up..."
  exit 1
fi
touch "$rpath/mon.run.lock" && echo "`date +"%H:%M:%S"` >>> Fixports.run: locking" >> "$rpath/monitoring.log"

[ -x /bin/netstat ] && NETSTATCMD='/bin/netstat'
[ -z "$NETSTATCMD" ] && NETSTATCMD=`which netstat 2>/dev/null`
if [ -z "$NETSTATCMD" ]; then
  echo "Netstat utility not found! Aborting.."
  exit 1
fi
rm -f "$M_TEMP"/netstat.*.tmp 2>/dev/null

# TCP and UDP PORTS
inusetcp=`cat /proc/net/protocols | grep ^TCP[[:space:]] | awk '{print $3}'`
inusetcp=`expr $inusetcp + 2`
tcphead=`cat /proc/net/tcp | grep ' 0A ' | head -n $inusetcp | wc -l`
inusetcp6=`cat /proc/net/protocols | grep ^TCPv6[[:space:]] | awk '{print $3}'`
if [ -n "$inusetcp6" ] ; then
  inusetcp6=`expr $inusetcp6 + 2`
  tcp6head=`cat /proc/net/tcp6 | grep ' 0A ' | head -n $inusetcp6 | wc -l`
fi
inuseudp=`cat /proc/net/protocols | grep ^UDP[[:space:]] | awk '{print $3}'`
inuseudp=`expr $inuseudp + 2`
udphead=`cat /proc/net/udp | grep ' 0A ' | head -n $inuseudp | wc -l`
inuseudp6=`cat /proc/net/protocols | grep ^UDPv6[[:space:]] | awk '{print $3}'`
if [ -n "$inuseudp6" ] ; then
inuseudp6=`expr $inuseudp6 + 2`
udp6head=`cat /proc/net/udp6 | grep ' 0A ' | head -n $inuseudp6 | wc -l`
fi
if ([[ $tcphead -eq $inusetcp ]] || ([ -n "$inusetcp6" ] && [[ $tcp6head -eq $inusetcp6 ]])); then
  if ([[ $inusetcp -ne 0 ]] || [[ $inusetcp6 -ne 0 ]]); then
    echo "fixports: TCP ports monitor is disabled" >> "$rpath/monitoring.log"
  fi
else
  # No point in parsing of more than 100 lines of LISTENING ports, increase this
  # if you want
  tcpports=`$NETSTATCMD -tlpn | head -100 | grep -v ^Proto | grep -v ^Active | awk '{ print $4" "$7 }'`
  [ `echo "$tcpports" | wc -l` -gt `echo "$tcpports" | uniq | wc -l` ] && echo "fixports: TCP ports monitor is disabled due to duplicates in netstat output" >> "$rpath/monitoring.log"
fi

if ([[ $udphead -eq $inuseudp ]] || ([ -n "$inuseudp6" ] && [[ $udp6head -eq $inuseudp6 ]])); then
  if ([[ $inuseudp -ne 0 ]] && [[ $inuseudp6 -ne 0 ]]) ; then
    echo "fixports: UDP ports monitor is disabled" >> "$rpath/monitoring.log"
  fi
else
  udpportd=`$NETSTATCMD -ulpn | head -100 | grep -v ^Proto | grep -v ^Active | awk '{ print $4" "$6 }'`
  [ `echo "$udpports" | wc -l` -gt `echo "$udpports" | uniq | wc -l` ] && echo "fixports: UDP ports monitor is disabled due to duplicates in netstat output" >> "$rpath/monitoring.log"
fi

rm -f "$rpath"/ports.*.list
IFS1=$IFS
IFS='
'

for LINE in `echo "$tcpports"`
do
  skip=false
  prog=${LINE#* }
  ppid=$(echo $prog | cut -d/ -f1)
  prog=$(echo $prog | cut -d/ -f2 | cut -d: -f1)
  port=${LINE% *}
  for exclport in `cat "$rpath/conf/ports.exclude" | grep -vE '^#|^$|^[[:space:]]*#'`
  do
    if [ `expr $exclport : ".*$prog"` -gt 0 ] ; then
      if [ `expr $exclport : "[0-9]*-[0-9]*"` -eq 0 ] ; then
        skip=true && break
      else
        portif=${port%:*}
        portnum=${port##*:}
        xports=${exclport%%|*}
        port1=${xports%-*}
        port2=${xports#*-}
        [ $portnum -gt $port1 -a $portnum -lt $port2 ] && skip=true && break
      fi
    fi
  done
  $skip && skip=false || echo "$port|$prog|$ppid" >> "$rpath/ports.tcp.list"
done


for LINE in `echo "$udpports"`
do
  skip=false
  prog=${LINE#* }
  ppid=$(echo $prog | cut -d/ -f1)
  prog=$(echo $prog | cut -d/ -f2 | cut -d: -f1)
  port=${LINE% *}
  for exclport in `cat "$rpath/conf/ports.exclude" | grep -vE '^#|^$|^[[:space:]]*#'`
  do
    if [ `expr $exclport : ".*$prog"` -gt 0 ] ; then
      if [ `expr $exclport : "[0-9]*-[0-9]*"` -eq 0 ] ; then
        skip=true && break
      else
        portif=${port%:*}
        portnum=${port##*:}
        xports=${exclport%%|*}
        port1=${xports%-*}
        port2=${xports#*-}
        [ $portnum -gt $port1 -a $portnum -lt $port2 ] && skip=true && break
      fi
    fi
  done
  $skip && skip=false || echo "$port|$prog|$ppid" >> "$rpath/ports.udp.list"
done

# UNIX SOCKETS
sockets=`$NETSTATCMD -xlpn 2>/dev/null | grep STREAM`
rm -f "$rpath/sockets.list"
for LINE in `echo "$sockets"`
do
  for exclsocket in `cat "$rpath/conf/sockets.exclude" | grep -vE '^#|^$|^[[:space:]]*#'`
  do
    skip=false
    [[ $LINE =~ $exclsocket ]] && skip=true && break
  done
  $skip && skip=false || echo "${LINE##*[[:space:]]}" >> "$rpath/sockets.list"
done
IFS=$IFS1
rm -f "$rpath/mon.run.lock" && echo "`date +"%H:%M:%S"` <<< Lock file removed by the process called as $0 $* " >> "$rpath/monitoring.log"
echo  >> "$rpath/monitoring.log"
