#!/bin/bash
# Copyright (C) 2008-2009 Igor Simonov (me@igorsimonov.com)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

rcommand=${0##*/}
rpath=${0%/*}
#*/ (this is needed to fix vi syntax highlighting)
install -d /tmp/m_script

[ -x /bin/netstat ] && NETSTATCMD='/bin/netstat'
[ "X$NETSTATCMD" == "X" ] && NETSTATCMD=`which netstat 2>/dev/null`
if [ `uname` == "Linux" ]; then
  if [ "X$NETSTATCMD" == "X" ]; then
    echo "Netstat utility not found! Aborting.."
    exit 1
  fi
fi

# PORTS
inusetcp=`cat /proc/net/sockstat | grep ^TCP: | cut -d' ' -f3`
inuseudp=`cat /proc/net/sockstat | grep ^UDP: | cut -d' ' -f3`
testthrtcp=`expr $inusetcp \* 3`
testthrudp=`expr $inuseudp \* 3`
if [ "X`cat /proc/net/tcp | head -n $testthrtcp | wc -l`" == "X$testthrtcp" ] ; then
  echo "TCP ports monitor is disabled due to too many keepalive and/or waiting"
  echo "connections."
else
  $NETSTATCMD -tlpn 2>/dev/null | grep -v ^Proto | grep -v ^Active | awk '{print $4" "$7}' > /tmp/m_script/netstat.tmp
fi
if [ "X`cat /proc/net/udp | head -n $testthrudp | wc -l`" == "X$testthrudp" ] ; then
  echo "UDP ports monitor is disabled due to too many keepalive and/or waiting"
  echo "connections."
  exit 1
else
  $NETSTATCMD -ulpn 2>/dev/null | grep -v ^Proto | grep -v ^Active | awk '{print $4" "$6}' >> /tmp/m_script/netstat.tmp
fi

[ `cat /tmp/m_script/netstat.tmp | wc -l` -eq 0 ] || exit 0

rm -f ${rpath}/ports.list
IFS1=$IFS
IFS='
'
while read LINE
do
  prog=${LINE#* }
  prog=$(echo $prog | cut -d/ -f2 | cut -d: -f1)
  port=${LINE% *}
  for exclport in `cat ${rpath}/conf/ports.exclude | grep -v '^#' | grep -v '^[:space:]*#'`
  do
    if [[ $exclport =~ [^[0-9-]]* ]] ; then
      [[ $prog =~ $exclport ]] && skip=1 && break
    else
      portif=${port%:*}
      portnum=${port##*:}
      port1=${exclport%-*}
      port2=${exclport#*-}
      ([[ $portnum -ge $port1 ]] || [[ $portnum -le $port2 ]]) && skip=1 && break
    fi
  done
  [[ $skip -eq 1 ]] && skip=0 || echo "$port" >> ${rpath}/ports.list
done < /tmp/m_script/netstat.tmp
# SOCKETS
$NETSTATCMD -xlpn 2>/dev/null | grep STREAM > /tmp/m_script/netstat.tmp
rm -f ${rpath}/sockets.list
while read LINE
do
  for exclsocket in `cat ${rpath}/conf/sockets.exclude | grep -v '^#' | grep -v '^[:space:]*#'`
  do
    [[ $LINE =~ $exclsocket ]] && skip=1 && break
  done
  [[ $skip -eq 1 ]] && skip=0 || echo "${LINE##*[[:space:]]}" >> ${rpath}/sockets.list
done < /tmp/m_script/netstat.tmp
IFS=$IFS1

