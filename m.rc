#!/bin/bash
# Copyright (C) 2008-2011 Igor Simonov (me@igorsimonov.com)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

rpath=$(readlink -f "$BASH_SOURCE")
rcommand=${rpath##*/}
rpath=${rpath%/*}
#*/

M_ROOT="$rpath"

setup_env() {
  [ -f $HOME/.bashrc ] && source $HOME/.bashrc
  source "${rpath}/conf/mon.conf"
  source "${rpath}/conf/cloud.conf"
  source "${rpath}/conf/deployment.conf"
  HOME_ORIG=$HOME
  HOME=$M_ROOT
  [ -f $HOME/.bashrc ] && source $HOME/.bashrc
  export CLOUD ROLES_ROOT M_ROOT HOME HOME_ORIG M_TEMP
  export PATH=${M_ROOT}/deployment:${M_ROOT}/cloud/${CLOUD}:${M_ROOT}/helpers:${PATH}
}

cr() {
  [ -z "$1" ] && cd "$ROLES_ROOT" && return
  [ "X$1" == "X--list" ] && ls "$ROLES_ROOT" && return
  [ "X$1" == "X--reload" ] && cr "$role" && return
  if [ ! -d "$ROLES_ROOT/$1" ] ; then
    echo "Role $1 doesn't exist. Use cr --list to get the list of roles available."
    return
  fi
  cd "$ROLES_ROOT/$1"
  export M_ROLE="${1%/}"
  export role="${1%/}"
  M_CLUSTER=`cat "${rpath}/conf/clusters.conf" | grep -v ^# | grep -v ^$ | cut -d'|' -f1,10 | grep \|${M_ROLE}$ | cut -d'|' -f1`
  [ `echo -e "$M_CLUSTER" | wc -l` -gt 1 ] && echo "More than one cluster found for this role. Selecting the first one." && M_CLUSTER=`echo -e "$M_CLUSTER" | head -1`
  if [ -z "$M_CLUSTER" ]; then
    echo "Cluster not found for this role. It is not a critical error, but default cluster and flavor cannot be determined. It is recommended to create a record in conf/clusters.conf."
  else
    export M_CLUSTER
    flavor=`grep ^$M_CLUSTER\| "${rpath}/conf/clusters.conf" | cut -d'|' -f11`
    export flavor
  fi
  set_default_ps
  source role.conf
}

exitrole() {
  unset M_ROLE M_CLUSTER ROLES_ROOT role flavor cr
  set_default_ps
}

set_default_ps() {
  if ${use_color} ; then
    if [ -z "$PS_COLOR" ] ; then
      PS1_COLOR="$ATTR_BOLD$FG_RED"
    else
      PS1_COLOR="`eval echo "$PS_COLOR"`"
    fi
    PS1="\[${CONTR_SEQ}$ATTR_NONE$FG_WHITE\][\[${CONTR_SEQ}$PS1_COLOR\]${HOSTNAME%%.*}\[${UNSET_COLOR}\]:\[${CONTR_SEQ}$ATTR_BOLD$FG_CYAN\]${M_ROLE}\[${CONTR_SEQ}$ATTR_NONE$FG_WHITE\] \W]# \[${UNSET_COLOR}\]"
  else
    PS1="[${HOSTNAME%%.*}:${M_ROLE}]# "
  fi
  export PS1
}

safe_term=${TERM//[^[:alnum:]]/?}   # sanitize TERM
match_lhs=""
[[ -f ~/.dir_colors   ]] && match_lhs="${match_lhs}$(<~/.dir_colors)"
[[ -f /etc/DIR_COLORS ]] && match_lhs="${match_lhs}$(</etc/DIR_COLORS)"
[[ -z ${match_lhs}    ]] \
	&& type -P dircolors >/dev/null \
	&& match_lhs=$(dircolors --print-database)
[[ $'\n'${match_lhs} == *$'\n'"TERM "${safe_term}* ]] && M_COLOR=1
export M_COLOR

if [ -n "$M_COLOR" ] ; then
# Attribute codes: 
# 00=none 01=bold 04=underscore 05=blink 07=reverse 08=concealed
# Text color codes:
# 30=black 31=red 32=green 33=yellow 34=blue 35=magenta 36=cyan 37=white
# Background color codes:
# 40=black 41=red 42=green 43=yellow 44=blue 45=magenta 46=cyan 47=white
  CONTR_SEQ='\033['
  UNSET_COLOR="${CONTR_SEQ}0m"
  FG_BLACK='30m'
  FG_RED='31m'
  FG_GREEN='32m'
  FG_YELLOW='33m'
  FG_BLUE='34m'
  FG_MAGENTA='35m'
  FG_CYAN='36m'
  FG_WHITE='37m'
  BG_BLACK='40m'
  BG_RED='41m'
  BG_GREEN='42m'
  BG_YELLOW='43m'
  BG_BLUE='44m'
  BG_MAGENTA='45m'
  BG_CYAN='46m'
  BG_WHITE='47m'
  ATTR_NONE='00;'
  ATTR_BOLD='01;'
  ATTR_UNDERSCORE='04;'
  ATTR_BLINK='05;'
  ATTR_REVERSE='07;'
  ATTR_CONCEALED='08;'
  # Example:
  # echo -e "$CONTR_SEQ$ATTR_BOLD$FG_RED$HOSTNAME$CONTR_SEQ$ATTR_BLINK${FG_WHITE}:$UNSET_COLOR"
  # echo -e "$CONTR_SEQ$FG_MAGENTA blablabla $UNSET_COLOR"  ### - simplest case
  
fi

setup_env
set_default_ps
cd


unset safe_term match_lhs

