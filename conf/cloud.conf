#!/bin/bash

CLOUD=ec2

# Possible values: external, internal. Meaning: what IPs are used for communications with cloud servers. Default: internal
NETWORK=

# In case you are using non-standard SSH port
SSHPORT=

##################################
##  Amazon cloud configuration  ##
##################################

if [ "X$CLOUD" == "Xec2" ] ; then
# The two environment variables below are needed for cron jobs
JAVA_HOME=
EC2_HOME=
EC2_PRIVATE_KEY=
EC2_CERT=
EC2_USERID=
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=

EC2_AK=
EC2_REGION=
EC2_TOOLS_BIN_PATH=
## If different from ec2-api-tools:
EC2_AMI_TOOLS_BIN_PATH=

### S3 bucket to save AMI to:
BUCKETNAME=
### Multiple paths should be separated by comma
EXCLUDE_PATHS=
SAVED_FILES_PATH=/mnt
ARCH=i386

PATH=$EC2_TOOLS_BIN_PATH:$EC2_AMI_TOOLS_BIN_PATH:$PATH

export JAVA_HOME EC2_HOME EC2_CERT EC2_PRIVATE_KEY AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY EC2_AK PATH

fi

#####################################
##  Slicehost cloud configuration  ##
#####################################

if [ "X$CLOUD" == "Xslicehost" ] ; then

SL_AUTH=
SL_APIURL=api.slicehost.com

fi


#################################
##  Application configuration  ##
#################################


### Application servers clusters
### cluster:port:application
### Multiple clusters and ports should be put in quotes and separated by spaces:
### APP_SERVERS="cluster1:3000:app1 cluster2:3000:app2 cluster2:3001:app3"

APP_SERVERS=app:9000

###
### Nginx proxy/balancer
###

#NGINX_PROXY_CLUSTER_CONF_DIR=/etc/nginx/clusters/
#NGINX_RC_SCRIPT=/etc/init.d/nginx
#NGINX_RELOAD_COMMAND=reload




