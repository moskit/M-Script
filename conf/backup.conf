### If remotehost and remoteuser are not set, transfer method will be forced
### to 'local'
### For S3 use bucket name like this: s3://bucket
remotehost=''
remoteuser=''
### Password is for FTP only! Other methods require appropriate methods to be set up (SSH keys etc.)
remotepw=''

### Paths

#localbackuppath="/opt/m_script" # If not set, defaults to the current directory
				 # --from-remote context:
				 # This is a final destination for backups
				 # --to-remote context:
				 # This is a path to local backups and/or for
				 # temporary files being created while creating
				 # backuped files

#remotepath="/var/backup"   # --from-remote context:
			    # Directory where run-time scripts and local backups 
			    # (local from a remote server point of view)
			    # are being stored. It must exist!
			    # --to-remote context:
			    # This is a final destination for backups

### remotebackuppath works only for --from-remote=local and represents the
### path where backups are being stored on the remote host
remotebackuppath=""

### Backup parameters
databases=""       # Means types of DB, not names, currently supported are:
                   # mysql, pgsql, mongo. To backup more than one, separate by
                   # spaces e.g.: "mysql mongo"

### MySQL settings
mysqluser="root"
mysqlpass=""
mysqlhost="localhost"
mysqldblist=""     # Databases to backup. Leave it blank to backup all databases
mysqldbexclude=""  # Databases to exclude from backup. Leave it blank to backup all databases

### PostgreSQL settings
pgsqluser="postgres"
pgsqlpass=""
pgsqlhost="localhost"
pgdblist=""        # Databases to backup. Leave it blank to backup all databases
pgdbexclude=""     # Databases to exclude from backup. Leave it blank to backup all databases

### MongoDB settings
mongouser=""
mongopass=""
## Mongo backup script tries to dump from a slave replica to prevent locks.
## The list of hosts is accepted below, separated by spaces. They are NOT hosts
## that are backuped, they are used only to discover slave replica which will be
## backuped.
## If the first host is available and answers the query, search stops and backup
## starts on the discovered slave replica.
mongohosts="localhost"
mongodblist=""     # Databases to backup. Leave it blank to backup all databases
mongodbexclude=""  # Databases to exclude from backup. Leave it blank to backup all databases

compression="gzip" # Supported are: gzip, bzip2
keeplocal="yes"
removeoldlocal="yes"
keeplocaldays=1
keepremote="yes"
removeoldremote="yes"
keepremotedays=10

### Other options
followlinks="no"
numericids="yes"
preserveperm="yes"
samefs="yes"
## bandwidth limit, Kbit/s
# bwlimit=100
## compression for to-remote transfer
# xfercompression="yes"

### Transport-specific options. Common options from the section above can be
### overwritten here.
rsyncoptions="--delete-after --delete-excluded --compress"
# scpoptions=""
# ftpoptions=""
# cpoptions=""
# s3options=""

# To split the result files to fixed-sized pieces of the size split_size
# Size can be defined as bytes or bytes with multiplyers: 
# 512 (b), 1000 (KB), 1024 (K), 1000*1000 (MB), 1024*1024 (M),
# 1000*1000*1000 (GB), 1024*1024*1024 (G) and so on for T,P,E,Z,Y
### Older versions of coreutils don't support these multiplyers! If this is
### the case, use b, k and m multiplyers for blocks, kilobytes and megabytes.
split_size=""

### Any environment variables you may wish can be set in this file, but only those
### listed below will be reset back after backup.run has finished.

#RSYNC_RSH="`which ssh` -c arcfour -o Compression=no -x"

### Other environment variables examples (these will be not reset back).

#PATH=/opt/lampp/bin:$PATH

