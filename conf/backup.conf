### If remotehost and remoteuser are not set, transfer method will be forced
### to 'local'
### For S3 use bucket name like this: s3://bucket

remotehost=''
remoteuser=''

### Password is for FTP only! Use keys for SSH-based transfers.

remotepw=''

### Paths

## Paths to the files and folders to be backuped go to the backup.conf.list
## files, each to its correspondent .conf file, that is e.g.
## backup.mysite.conf --> backup.mysite.conf.list (in case of multiple backup
## configurations)
## Similarly, patterns for excluding files/folders go to the correspondent
## backup.*.conf.exclude files
## Also, each listed folder may contain files backup.include and backup.exclude
## where correspondent paths can be listed, either relative or absolute.

# If not set, defaults to the M_ROOT/backups

localbackuppath="/opt/m"

# --from-remote context: a final destination for backups
# --to-remote context: a path to local backups, logs and temporary files

remotepath="/var/m_backup"

#####
# BE CAREFUL WITH THIS SETTING!
# The old backups removal function (removeoldremote, below) can remove 
# non-backup files on the remote system if remotepath is not set or incorrect.
#####
# --to-remote context: a final destination for backups
#     For S3, it is a prefix (s3://bucket/remotepath),
#     both remotepath and /remotepath are OK
# if --to-remote=local and remotepath is not absolute, it is a subfolder of
# /var/m_backup
# --from-remote context: directory where run-time scripts and local backups 
# (local from a remote server point of view) are stored. It must exist!

### remotebackuppath works only for --from-remote=local and represents the
### path where backups are stored on the remote host

remotebackuppath=""

### Backup parameters

# This means types of DB: mysql, pgsql, mongo are currently supported
# If you have more than one, separate them by spaces, e.g. "mysql mongo"

databases=""

# Whether to put database backups into a separate folder named by database type.
# By default such folder is created in the folder where backups are stored, so
# if filesystem backups go to e.g. /var/m_backup, database backups go to e.g.
# /var/m_backup/mysql

#db_separate_folder=true

### MySQL settings

mysqluser="root"
mysqlpass=""
mysqlhost="localhost"
mysqldblist=""     # Databases to backup. Leave it blank to backup all databases
mysqldbexclude=""  # Databases to exclude from backup. Leave it blank to backup all databases

### PostgreSQL settings

pgsqluser="postgres"
pgsqlpass=""
pgsqlhost="localhost"
pgdblist=""
pgdbexclude=""

### MongoDB settings

mongouser=""
mongopass=""

## Mongo backup script tries to dump from a slave replica to prevent locks.
## The list of hosts is accepted below, separated by spaces. They are NOT hosts
## that are backuped, they are used only to discover slave replica which will be
## backuped.
## If the first host is available and answers the query, search stops and backup
## starts on the discovered slave replica.

mongohosts="localhost"

## If database is sharded, put hosts withs balancers (mongos) running here
## For cloud environments, and if MongoDB monitor is enabled on this server,
## you can use something like:
#mongohosts=$(cat "$M_ROOT/standalone/MongoDB/mongo_mongos_servers.list" | cut -d'|' -f1)

mongodblist=""
mongodbexclude=""

# If not empty, reads per-table backup configuration from the file defined here
# (path must be relative to M_ROOT or absolute)
# See comments in conf/mongo.tables.backup.conf

mongodbpertableconf=""

# Change to true to prevent storing temporary uncompressed backups (to save 
# space). Note that this doesn't work for versions < 1.7

compress_onthefly=false
# This works only if backups compression (below) is enabled.

# One of: gzip, bzip2

compression="gzip"
keeplocal="yes"
removeoldlocal="yes"
keeplocaldays=1
keepremote="yes"

# ENSURE THAT REMOTE PATH IS CORRECT BEFORE ENABLING THIS OPTION
# also see comment to remotepath variable above

removeoldremote="no"
keepremotedays=10

### Other options

followlinks="no"
numericids="yes"
preserveperm="yes"
samefs="yes"

## bandwidth limit, Kbit/s

#bwlimit=100

## compression for to-remote transfer

#xfercompression="yes"

### Transport-specific options. Common options from the section above can be
### overwritten here.

rsyncoptions="--delete-after --delete-excluded --compress"
# scpoptions=""
# ftpoptions=""
# cpoptions=""
# s3options=""

# To split the result files to fixed-sized pieces of the size split_size
# Size can be defined as bytes or bytes with multiplyers: 
# 512 (b), 1000 (KB), 1024 (K), 1000*1000 (MB), 1024*1024 (M),
# 1000*1000*1000 (GB), 1024*1024*1024 (G) and so on for T,P,E,Z,Y
### Older versions of coreutils don't support these multiplyers! If this is
### the case, use b, k and m multiplyers for blocks, kilobytes and megabytes.

split_size=""

### Any environment variables you may wish can be set in this file, but only those
### listed below will be reset back after backup.run has finished.

#RSYNC_RSH="`which ssh` -c arcfour -o Compression=no -x"

### Other environment variables examples (these will be not reset back).

#PATH=/opt/lampp/bin:$PATH

