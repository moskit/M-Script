# Number of top eaters being watched
MEM_TOP_NUM=5

# RAM: processes consuming less than this percentage of available RAM will be
# ignored
MEM_RES_MIN=20

# Virtual memory: same but in percents of total available system memory (RAM +
# swap). Note that processes may reserve much more than available system memory
# so you may need number more than 100
MEM_VIR_MIN=50

# Thresholds, in percents:
# resident memory / total RAM
MEM_RES_1=50
MEM_RES_2=70
MEM_RES_3=90
# virtual memory / system memory (RAM + swap)
MEM_VIR_1=50
MEM_VIR_2=70
MEM_VIR_3=90

# Delta thresholds: if usage changes by more than this percentage since the last
# test, alert is issued
MEM_RES_DELTA_1=20
MEM_RES_DELTA_2=30
MEM_RES_DELTA_3=40
MEM_VIR_DELTA_1=40
MEM_VIR_DELTA_2=60
MEM_VIR_DELTA_3=80

# Whether to always show usage delta in reports (only alerts are shown by
# default)
# SHOW_OK_DELTA=1

# Enables totals calculation (overall memory usage by multiple identical
# processes). Whatever value assigned enables the feature, empty or undefined
# means disabled.
# CALCULATE_TOTALS=

# By default, all settings above apply to totals as well as individual processes
# To make any of them separate, just add the same setting with TOTALS_ prefix,
# e.g.:
# TOTALS_MEM_TOP_NUM=2

# If totals calculation is enabled, similar processes are found based on their
# CMD string which can be very long. Reasonable limits can be defined here:

# CMD string length (256 symbols by default):
# CMD_LENGTH=

# CMD string length, but this time in number of arguments considered, e.g.
# Two processes below are identical if number of arguments taken into
# consideration is 3 (the command counts too), but not identical if it's 4:
# Example1: command -foo -bar arg1
# Example1: command -foo -bar arg2
# If empty or not set, CMD_ARGS defaults to 2
# CMD_ARGS=


