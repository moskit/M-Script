#!/bin/bash
# Copyright (C) 2008-2009 Igor Simonov (me@igorsimonov.com)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

rcommand=${0##*/}
rpath=${0%/*}
[ -z "$M_ROOT" ] && M_ROOT=$(readlink -f "$rpath/../")
#*/
source "$M_ROOT/conf/mon.conf"

source "${0%.mon}.conf"
source "$M_ROOT/lib/functions.sh"
ruptime=`cat /proc/uptime | cut -d'.' -f1`
rfreeram=`cat /proc/meminfo | grep ^MemFree | awk '{ print $2 }'`
mfreeram=`solve 2 "$rfreeram / 1024"`
ractiveram=`cat /proc/meminfo | grep "^Active:" | awk '{ print $2}'`
if [ -n "$ractiveram" ] ; then
  mactiveram=`solve 2 "$ractiveram / 1024"`
else
  ractiveram=0
  mactiveram=0
fi
rtotalram=`cat /proc/meminfo | grep ^MemTotal | awk '{ print $2 }'`
mtotalram=`solve 2 "$rtotalram / 1024"`
rusedram=`expr $rtotalram - $rfreeram`
musedram=`solve 2 "$mtotalram - $mfreeram"`
rfreeswap=`cat /proc/meminfo | grep ^SwapFree | awk '{ print $2 }'`
mfreeswap=`solve 2 "$rfreeswap / 1024"`
rtotalswap=`cat /proc/meminfo | grep ^SwapTotal | awk '{ print $2 }'`
mtotalswap=`solve 2 "$rtotalswap / 1024"`
rusedswap=`expr $rtotalswap - $rfreeswap`
musedswap=`solve 2 "$mtotalswap - $mfreeswap"`
rtotalmemfree=`expr $rfreeram + $rfreeswap`
mtotalmemfree=`solve 2 "$rtotalmemfree / 1024"`
rtotalprocess=`ps axo pid | grep -vE "^USER|grep|ps" | wc -l`
rloadavg="$(cat /proc/loadavg | cut -d' ' -f1,2,3)"

echo -e "\nSystem status:\n--------------\nUptime:\t\t\t\t`expr $ruptime / 86400` days `expr \( $ruptime % 86400 \) / 3600`:`expr $ruptime % 86400 % 3600 / 60`\n"

[[ $ruptime -lt `expr $FREQ \* 4` ]] && echo "<***> System booted up `expr $ruptime / 60` minutes ago"

x=`cat /proc/loadavg | cut -d' ' -f2`
y1=`echo "$x >= $LOAD_1" | bc`
y2=`echo "$x >= $LOAD_2" | bc`
y3=`echo "$x >= $LOAD_3" | bc`
warnind='<OK> '
[ $y1 -eq 1 ] && warnind=' <*> '
[ $y2 -eq 1 ] && warnind='<**> '
[ $y3 -eq 1 ] && warnind='<***>'
echo -e "$warnind Load average (1 5 15 min):\t$rloadavg\n"

y1=`echo "$rtotalprocess >= $NPROC_1" | bc`
y2=`echo "$rtotalprocess >= $NPROC_2" | bc`
y3=`echo "$rtotalprocess >= $NPROC_3" | bc`
warnind='<OK> '
[ $y1 -eq 1 ] && warnind=' <*> '
[ $y2 -eq 1 ] && warnind='<**> '
[ $y3 -eq 1 ] && warnind='<***>'
echo -e "$warnind Total running processes:\t$rtotalprocess\n"

echo -e "Memory usage:\n----------------\n"

totalmemused=`solve 2 "($rusedram + $rusedswap) / ($rtotalram + $rtotalswap) * 100"`
totalramused=`solve 2 "$ractiveram / $rtotalram * 100"`
totalramfree=`solve 2 "$rfreeram / $rtotalram * 100"`
totalswapused=`solve 2 "$rusedswap / $rtotalswap * 100"`
totalmemfree=`solve 2 "100 - $totalmemused"`

y1=`echo "$totalmemused >= $SYSMEM_1" | bc`
y2=`echo "$totalmemused >= $SYSMEM_2" | bc`
y3=`echo "$totalmemused >= $SYSMEM_3" | bc`
warnind='<OK> '
[ $y1 -eq 1 ] && warnind=' <*> '
[ $y2 -eq 1 ] && warnind='<**> '
[ $y3 -eq 1 ] && warnind='<***>'

echo -e "Total RAM:\t\t${mtotalram} MB"
echo -e "Total Swap:\t\t${mtotalswap} MB"
echo -e "$warnind Free system memory:\t$mtotalmemfree MB (${totalmemfree}%)"

y1=`echo "$totalramused >= $ACTIVEMEM_1" | bc`
y2=`echo "$totalramused >= $ACTIVEMEM_2" | bc`
y3=`echo "$totalramused >= $ACTIVEMEM_3" | bc`
warnind='<OK> '
[ $y1 -eq 1 ] && warnind=' <*> '
[ $y2 -eq 1 ] && warnind='<**> '
[ $y3 -eq 1 ] && warnind='<***>'
echo -e "$warnind Active RAM:\t\t$mactiveram MB (${totalramused}%)"

y1=`echo "$totalramfree <= $FREERAM_1" | bc`
y2=`echo "$totalramfree <= $FREERAM_2" | bc`
y3=`echo "$totalramfree <= $FREERAM_3" | bc`
warnind='<OK> '
[ $y1 -eq 1 ] && warnind=' <*> '
[ $y2 -eq 1 ] && warnind='<**> '
[ $y3 -eq 1 ] && warnind='<***>'
echo -e "$warnind Used RAM:\t\t\t${musedram} MB" 
echo -e "$warnind Free RAM:\t\t\t${mfreeram} MB (${totalramfree}%)"

y1=`echo "$totalswapused >= $SWAP_1" | bc`
y2=`echo "$totalswapused >= $SWAP_2" | bc`
y3=`echo "$totalswapused >= $SWAP_3" | bc`
warnind='<OK> '
[ $y1 -eq 1 ] && warnind=' <*> '
[ $y2 -eq 1 ] && warnind='<**> '
[ $y3 -eq 1 ] && warnind='<***>'
echo -e "Used Swap:\t\t${musedswap} MB"
echo -e "Free Swap:\t\t${mfreeswap} MB"

if [ "X$SQLITE3" == "X1" ] && [ "X$1" == "XSQL" ]
then
  sqlite3 "$rpath/../sysdata" "update sysdata set totalram=$rtotalram, freeram=$rfreeram, activeram=$ractiveram, totalswap=$rtotalswap, freeswap=$rfreeswap, uptime=$ruptime, loadavg=$x, procnum=$rtotalprocess where timeindex='$timeindexnow'"
fi

